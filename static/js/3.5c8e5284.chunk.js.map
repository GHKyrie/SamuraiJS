{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","alt","message","likesCount","maxLength","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","MyPosts","memo","postsElements","posts","map","p","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","isAuth","to","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.5c8e5284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__31exB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2BEZW\",\"posts\":\"MyPosts_posts__3S9T3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__OorVl\",\"item\":\"Post_item__3KHs_\"};","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n        console.log('sdaw');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} value={this.state.status} onBlur={this.deactivateEditMode}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n        let [editMode, setEditMode] = useState(false);\r\n        let [status, setStatus] = useState(props.status);\r\n\r\n        useEffect( () => {\r\n            setStatus(props.status);\r\n        }, [props.status] );\r\n\r\n        const activateEditMode = () => {\r\n            setEditMode(true);\r\n        }\r\n\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ activateEditMode }\r\n                              >{ props.status || \"------\" }</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input autoFocus={ true }\r\n                               value={ status }\r\n                               onChange={ onStatusChange }\r\n                               onBlur={ deactivateEditMode } />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from  \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst  ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={profile.photos.large} />\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n          <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n          {props.message}\r\n          <div><span>{props.likesCount} likes</span></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLen = 10;\r\nconst maxLength = maxLengthCreator(maxLen);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength]}\r\n                    placeholder={\"Post message\"}/>\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}